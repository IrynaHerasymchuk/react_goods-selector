{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","good","setState","showSelectedGoods","length","slice","join","removeGood","filter","currentGood","clearSelected","className","this","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI5CE,kBAAoB,WAClB,IAAQJ,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcK,QACpB,KAAK,EACH,MAAO,uBAET,KAAK,EACH,MAAM,GAAN,OAAUL,EAAc,GAAxB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAEF,QACE,MAAM,GAAN,OAAUA,EAAcM,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDP,EAAcA,EAAcK,OAAS,GAA5F,mB,EAING,WAAa,SAACN,GACZ,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcS,QAAO,SAAAC,GAAW,OAAIA,IAAgBR,U,EAI7ES,cAAgB,WACd,EAAKR,SAAS,CACZH,cAAe,M,4CAInB,WAAU,IAAD,OACP,OACE,sBAAKY,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,SACGC,KAAKT,sBAGR,wBACEU,KAAK,SACLF,UAAU,yBACVG,QAASF,KAAKF,cAHhB,kBASF,oBAAIC,UAAU,OAAd,SACGf,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,qBAAeU,UAAU,aAAzB,UACE,+BACGV,IAGH,wBACEY,KAAK,SACLF,UAAU,sBACVG,QAAS,WACH,EAAKhB,MAAMC,cAAciB,SAASf,GACpC,EAAKM,WAAWN,GAEhB,EAAKD,WAAWC,IAPtB,SAWG,EAAKH,MAAMC,cAAciB,SAASf,GAC/B,SACA,UAlBCA,e,GA5DHgB,IAAMC,WAwFTrB,ICzGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ace5df0b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected :(';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(currentGood => currentGood !== good),\n    }));\n  };\n\n  clearSelected = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"heading\">\n          <h1 className=\"heading__title\">\n            {this.showSelectedGoods()}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"button heading__button\"\n            onClick={this.clearSelected}\n          >\n            x\n          </button>\n        </div>\n\n        <ul className=\"list\">\n          {goodsFromServer.map(good => (\n            <li key={good} className=\"list__item\">\n              <span>\n                {good}\n              </span>\n\n              <button\n                type=\"button\"\n                className=\"button list__button\"\n                onClick={() => {\n                  if (this.state.selectedGoods.includes(good)) {\n                    this.removeGood(good);\n                  } else {\n                    this.selectGood(good);\n                  }\n                }}\n              >\n                {this.state.selectedGoods.includes(good)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}